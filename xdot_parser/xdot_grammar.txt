I haven't found a complete specification of the .xdot file format yet, so
here's my attempt at piecing together a grammar for the language. This would
be useful if we decide to write an actual recursive descent parser or
something for xdot; right now, xdot2cy.js just parses the file line-by-line,
which is fine for valid, auto-generated graphs but not that great for graphs
where the user can format the input differently, or for detecting errors.

Xdotfile    -> Graphtype Name { (ClusterDecl | NodeDecl | EdgeDecl)+ }
Graphtype   -> digraph | graph
Name        -> [a-zA-Z0-9]+
Num         -> [0-9]+(\.[0-9]+)?(e[\+-][0-9]+)?

ClusterDecl -> subgraph cluster_Name
	       { graph [ Settings ]; (NodeDecl | EdgeDecl)+ }

NodeDecl    -> Name [_draw_ = DrawSettings, _ldraw_ = LdrawSettings,
   	       height = Num, pos = "Num,Num", shape = house | invhouse,
 	       width = Num];

EdgeDecl    -> Name(:[nsew])? -> Name(:[nsew])? [_draw_ = DrawSettings,
               _hdraw_ = Hdrawsettings, pos = EdgePosition];

Settings    -> TODO
DrawSettings -> TODO
LdrawSettings -> TODO
HdrawSettings -> TODO
EdgePosition -> TODO
